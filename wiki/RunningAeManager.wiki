#summary Configuring and running the aeManager
= Import the _aeManager_ Project =
(The following steps are for cases when user has used the CLI for checking out the code)
  # Start eclipse
  # Select File then *_Import..._*
  # Click General
  # Double Click *_Existing Projects into Workspace_*
  # For the *_Select root directory_* browse to the location of the source checked out via svn. Select the *_all-eyes/src/aemgr/aeManager_* directory as the root.
  # Click the *_Copy projects into workspace_* option
  # Lastly click *_Finish_* and the project will be added to your eclipse workspace

= Running and Configuring the _aeManager_ =
  # In eclipse click on the _aeManager_ project and then click in top eclipse menu "Project" and select "clean".
  # In eclipse right click on the top level _aeManager_ project in the project explorer
  # Select the _Run As_ then _Android Application_
  # The Android VM will start and the _aeManager_ application will be installed
  # Once the VM starts unlock the VM and you will see the _aeManager_ warning banner.
  # Select “Start” that's on the _aeManager_ warning banner screen
  # Click the *_Settings_*
  # Click the *_Username_* and enter your username then click the *_OK_* button
  # Click the *_IP Address_* and enter *_alleyes.poly.edu_* then click the *_OK_* button
  # Click the *_Port_* and enter *_8080_* then click the “OK” button
  # Click the back arrow to return to the ae Manager Menu
  # Important: If your development machine is hosting a web server stop it.

= Configuring the Android VM for Local Testing =
  # In order to connect to the AE Proxy in the development environment one has to create a static IP address on the Android VM for *_alleyes.poly.edu_* domain.
  # Start a *_terminal_* on the Linux development environment
  # Run *_ifconfig_* to get the IP address of the Linux host running the aeProxy. These instructions will refer to this IP address as AE_PROXY_IP
  # Start a terminal session on the running android VM with the command: *_adb shell_*
  # Become super-user with the command *_su_*
  # Make the filesystem writable with the command: *_mount –o rw,remount –t yaffs2 /dev/block/mtdblock3 /system_*
  # Invoke the command: *_cd  /system/etc_*
  # Create a hosts entry in the hosts file with the command replacing AE_PROXY_IP with the IP address found in step 3 above: *_echo AE_PROXY_IP alleyes.poly.edu  >> hosts_*
  # Type *_exit_* twice to exit the adb shell
  # Go back to AeManager App, and click on "View Events".  Click "Refresh", if ae-daemon is sending events to the AeManager, events will show up in this window.  For example:

http://all-eyes.googlecode.com/svn/trunk/docs/AeMgrEventsList.png

* (NOTE:  If events do not show, first verify the AeManager is connecting to the AeProxy.  This can be viewed in the "LogCat" within eclipse) *

  # User then can click on a specific event to obtain more details, and is provided ability to act upon the requested 'action'.

http://all-eyes.googlecode.com/svn/trunk/docs/AeMgrSpecificEvent.png


= Installing the _aeManager_ on an Android device =
  # Build the application for release
  # Attach the _aeManager.apk_ file found in your workspace in the _aeManager/bin_ directory to an email.  For added protection you can sign the email.
  # Send the email to the owner of the Android device
  # Open the email message on the Android-powered device
  # The Android system will recognize the APK and display an _Install_ button.
  # Install your application by clicking the _Install_ button.