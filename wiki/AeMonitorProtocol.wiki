=AE-DAEMON / MONITORS PROTOCOL SPECIFICATION=
Between the ae ademon and monitors, the protocol is request/response style and there are 2 class of messages:
   * Control Message
   * Event Message

The same protocol is used to communicate between ae manager (i.e. Android client) and the ae daemon.  

_The maximum message length is 1204 bytes.  Any message longer than that will be considered invalid and ae daemon will restart the monitor.

=Control Message=
The control message is defined to be

   ===_*`[:<Text-Header>:]`*_===

Where the _*`[:`*_ is the beginning marker and the _*`:]`*_ is the ending marker.

The field _*`<Text-Header>`*_ is defined to be

   ===_*`<version>:<msg-type>:<name>`*_===

Where the  _*:*_ is the sub-field delimiter. Each sub-field is defined in the tables below.

===_*`<version>`*_ - Protocol version===
|| *Value* || *Comment* ||
|| 10 || Valid version number ||

===_*`<msg-type>`*_ - Message type===
|| *Value* || *Comment* ||
|| 00 || The HELLO message ||
|| 11 || The ACK message ||
|| 22 || The event message ||
|| 33 || The action message ||

===_*`<name>`*_ - Monitor name===
|| *Value* || *Comment* ||
|| AE || For ae daemon ||
|| SM || For socket monitor ||
|| PM || For proc monitor ||
|| FL || For file monitor || 
|| FD || For file descriptor monitor || 
|| SF || For ae itself monitor ||
|| AM || For ae manager ||
=Event Message=
The event message is defined to be

   ===_*`[:<Text-Header>:<event-id>:<status-op>:action-list>:<text>:]`*_===

Where the _*`[:`*_ is the beginning marker, the _*`:]`*_ is the ending marker, and the _*`:`*_ is the field delimiter.

The field _*`<Text-Header>`*_ is defined under the control message header above. For the rest of fields, they are defined in the tables below.

===_*`<event-id>`*_ - Event associated with the monitor sensors===
|| *Value* || *Comment* ||
|| 0001 || The Black issue. Reported by socketmon. ||
|| 0002 || The White issue. Reported by socketmon. ||
|| etc || Other event codes ... ||
|| 9999 || initial channel validation event ||

===_*`<status-op>`*_ - Status code or opcode of the monitor===
|| *Value* || *Comment* ||
|| 00 || GREEN ||
|| 01 || ORANGE ||
|| 11 || RED ||

===_*`<action-list>`*_ - An array of possible action list for that event defined by _*`<event-id>`*_===
|| *Value* || *Comment* ||
|| A0 || Ignore ||
|| A1 || Halt The Machine||


===_*`<text>`*_ - A text message to be transmitted===
|| *Value* || *Comment* ||
|| ASCII String || Text message. Maximum of 80 chars ||

=Examples=
===Initial channel validation===
This is special request/response message pair only happens at the time the connection is just established for validating that the connection between ae-daemon and monitor is a legitimate connection. Note that the _*`<text>`*_ string _*`19`*_ represents the public key of the monitor. This number is transmitted to ae-daemon for calculating the shared secret key between the ae-daemon and the monitor.
|| SOCKETMON sends || _*`[:10:22:SM:9999:00:A0:19:]`*_ ||
|| AE_DAEMON replies || _*`[:10:11:AE:]`*_ ||


===Hello message, it is sent by the monitor every 30 seconds===
|| SOCKETMON sends || _*`[:10:00:SM:]`*_ ||
|| AE_DAEMON replies || _*`[:10:11:AE:]`*_ ||

===Report the required listening TCP port 22 is down with possible actions of ignore or halt===
|| SOCKETMON sends || _*`[:10:22:SM:0002:11:A0A1:22:]`*_ ||
|| AE_DAEMON replies || _*`[:10:11:AE:]`*_ ||

===Report the blacklisted port 80 is up with possible actions of ignore or halt===
|| SOCKETMON sends || _*`[:10:22:SM:0001:11:A0A1:80:]`*_ ||
|| AE_DAEMON replies || _*`[:10:11:AE:]`*_ ||

===Report the blacklisted port 80 is down (cleared) with possible action ignore===
|| SOCKETMON sends || _*`[:10:22:SM:0001:00:A0:80:]`*_ ||
|| AE_DAEMON replies || _*`[:10:11:AE:]`*_ ||