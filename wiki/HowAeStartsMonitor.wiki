= PROCEDURE FOR AE-DAEMON TO START UP A  MONITOR=

All monitors are managed by the ae daemon, call it ae-daemon. The ae-daemon manages a tables of monitor names and is responsible of starting up the monitors. The process of starting up a monitor by the ae-daemon is defined as following:

   # The ae-daemon reads the monitor checksum profile, using SH256 to calculate the checksum of the monitor to be started up. The ae-daemon should always refer to the full-path and name of the monitor.
   # The ae-daemon compares the calculated checksum of the monitor and the information in the checksum profile to make sure that it is a legitimate monitor.
   # The ae-daemon picks the public prime number _*`p`*_ and public base _*`b`*_, and calculates its public key _*`A`*_ using the Diffie-Hellman key exchange algorithm.
   # The ae-daemon starts up (by fork/exec) the monitor by supplying 4 parameters to the monitor. The first parameter is the TCP port _*`tcp-port`*_, the second, third, and fourth parameters are _*`p`*_, _*`b`*_, _*`A`*_. It is very important that the value for _*`tcp-port`*_, _*`p`*_, _*`b`*_ must be randomly generated by the ae-daemon.
   # The monitor listens on the TCP port _*`tcp-port`*_ for incoming connection, and generates its public/private key pair based on the _*`p`*_, _*`b`*_, and _*`A`*_ values. Note that (1) the monitor should only support 1 incoming connection and (2) there is a 30 seconds timeout that if there is no incoming connection request within the timeout value, the monitor should kill itself.
   # The ae-daemon keeps checking the list of TCP listing port (i.e. netstat tulpn) to make sure that there is the legitimate monitor process who is listening on the expected port. Note that the ae-daemon has the information of listening port number, monitor's full-path and name, and the PID of the monitor process. So ae-daemon can easily compare the information from netstat to make the decision.
   # The ae-daemon connects to the monitor via the _*`tcp-port`*_ and expects to receive the initial channel validation message from the monitor.
   # Once the TCP/IP connection is established, the monitor must close the listening port, and then sends the initial channel validation message to ae-daemon (please see the page *AeMonitorProtocol* for more information). This message should include the monitor's public key _*`B`*_.
   # After ae-daemon receives the initial channel validation message, it should send back the ACK response message. Then, based on the monitor's public key _*`B`*_, the ae-daemon calculates its private key.
   # The ae-daemon should kill the monitor process if it detects that the process who is listening on the port is not the legitimate process.
   # The ae-daemon should keep starting up the monitor with random TCP port if it detects that the legitimate monitor isn't running.
   # After the initial channel validation, both sides, ae-daemon and monitor, should have its own private key calculated. The algorithm for key exchange is Diffie-Hellman.
   # The sub-sequent messages after the initial channel validation message are encrypted. The encryption will be AES.