= Introduction =
“All Eyes” (AKA ae) is a miniature applications-security intrusion detection system.  It has four components.  They are:

;: 1.  'ae' daemon that spawns and maintains monitors (Implemented in C)
;:#  Monitors are independent programs that monitor various critical components of a system such as Sockets, running-processes, critical files etc. (Implemented in C)
;:#  'ae proxy' will translate packets between the ae daemon and ae manger(running on Droid Device)
;:#  'ae-mgr' is an Android application helps users to choose various action for ae to take, based on the status of the monitors. It communicates over the Internet to ae through a secure connection (Implemented in Java)

= Details =

Following is an overview diagram of the AE architecture:

http://all-eyes.googlecode.com/svn/trunk/docs/AEArchOverView.png



=1) Embedded System (ae daemon):=

   Running on Ubuntu 12.04, consists of a main daemon, which communicates
   with 1 or more monitors.  This communication is via stdin/stdout.  The
   daemon will 'load' the monitors (via exec??)
  
   The current monitors supported are:

    o self monitor
    o socket monitor
    o file 
    o critical file monitor (tbd) 

    Protocol between daemon & monitors is described here:

      https://code.google.com/p/all-eyes/wiki/AeMonitorProtocol

=2) Communication between AE & AE Proxy:=

    The communication between AE & AE Proxy will be over SSL.

    ...
    ...

=3) Web Server(AE Proxy):=

    The AE proxy will translate packets between the AE and AE Manger(running on Droid Device)

=4) Communication between AE Proxy and AE Manger=

    The communication between AE & AE Proxy will be over SSL.


=5) Android Device(AE Manager)=

   The Android Device will obtain status on the various monitors.

   ...
   ...

=6) Development Environments:=

  a) AE:

     Utilizes google svn, located at:

         https://code.google.com/p/all-eyes/source/browse/

     Users may use CLI/command line access for their developers
     environment, or use eclipse as described:

      https://code.google.com/p/all-eyes/wiki/EclipseC_SVNSetup

   b) AE Proxy:

       Utilizes java??????

   c) AE Manager:

       Utilizes Android Developers Environment...????

=7) Testing=
  a) We have been doing incremental testing through out the development cycle.  The details of this is available in [http://code.google.com/p/all-eyes/issues/list].  We are continuously resolving the bugs and adding code towards enhancements.